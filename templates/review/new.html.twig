{{ form_start(form, {'attr': {'class': 'review-form container'}}) }}
<div class="form-group">
    {{ form_row(form.nick, {'attr': {'class': 'form-control'}}) }}
</div>
<div class="form-group">
    {{ form_row(form.reviewText, {'attr': {'class': 'form-control'}}) }}
</div>

<div class="star-rating">
    {% for value in [1,2,3,4,5] %}
        <input type="radio" name="{{ form.stars.vars.full_name }}" value="{{ value }}" id="star{{ value }}" {% if form.vars.value.stars == value %}checked{% endif %} class="star-input"/>
        <label for="star{{ value }}" title="{{ value }} stars" class="star-label">&#9733;</label>
    {% endfor %}
</div>
{{ form_widget(form.stars, {
    'attr': {
        'class': 'd-none'
    }
}) }}

{{ form_row(form.captcha) }}

<button type="submit" class="btn btn-primary mt-4">{{ 'review.formButton'|trans }}</button>
{{ form_end(form) }}

<style>
    .star-input {
        display: none;
    }

    .star-label {
        cursor: pointer;
        color: gray;
        font-size: 24px;
    }
    .star-label.active {
        color: gold;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const stars = document.querySelectorAll('.star-label');

        stars.forEach(star => {
            star.addEventListener('click', function() {
                let clickedStarValue = parseInt(this.htmlFor.replace('star', ''));
                stars.forEach((star, index) => {
                    if (index < clickedStarValue) {
                        star.classList.add('active');
                    } else {
                        star.classList.remove('active');
                    }
                });
            });
        });
    });
</script>

<script>
    const siteKey = '{{ siteKey|raw }}';

    //either on page load
    grecaptcha.ready(function() {
        grecaptcha.execute(siteKey, {
            action: 'homepage'
        }).then(function(token) {
            //the token will be sent on form submit
            $('[name="captcha"]').val(token);
            //keep in mind that token expires in 120 seconds so it's better to add setTimeout.
        });
    });

    //or on form post:
    grecaptcha.ready(function() {
        grecaptcha.execute(siteKey, {
            action: 'homepage'
        }).then(function(token) {
            //submit the form
            return http.post(url, {email, captcha: token});
        });
    });
</script>
